---
stages:
  - build
  - go

before_script:
  - export TAG=${CI_COMMIT_SHORT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

spotlight.build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -f Dockerfile . --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
    refs:
      - merge_requests
      - main
  tags:
    - local

# lint:
#   stage: go
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   variables:
#     PRONTO_GITLAB_API_ENDPOINT: "https://gitlab.com/api/v4"
#   before_script:
#     - export PRONTO_GITLAB_API_PRIVATE_TOKEN=$GITLAB_API_TOKEN
#   allow_failure: false
#   script:
#     - git fetch && git checkout main && git checkout ${CI_COMMIT_SHORT_SHA}
#     - bundle check || bundle
#     - bundle exec pronto run -f gitlab -c origin/main
#     - cd /app/samvera/hyrax-webapp && bundle exec rubocop -P
#   tags:
#     - docker

# test:
#   stage: go
#   image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   allow_failure: true
#   variables:


spotlight.staging:
  stage: go
  extends:
    - .deploy
  only:
    refs:
      - main
      - branches
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHORT_SHA
    HELM_EXTRA_ARGS: >
      --values ops/staging-values.yaml
  script:
    - envsubst < ops/staging-values.tmpl.yaml > ops/staging-values.yaml
    - ./ops/chart/bin/helm_deploy spotlight-staging staging
  tags:
    - docker

.deploy:
  image: dtzar/helm-kubectl:3.5.3
